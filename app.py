import os
import requests
import urllib3
from flask import Flask, request
import telebot
import json

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è SSL
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = os.environ.get('BOT_TOKEN')
GIGACHAT_API_KEY = os.environ.get('GIGACHAT_API_KEY')
APP_URL = "https://telegram-bot-x6zm.onrender.com"

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

print("üöÄ Starting Telegram Bot with GigaChat...")
print(f"üîë BOT_TOKEN: {'‚úÖ' if BOT_TOKEN else '‚ùå'}")
print(f"üß† GIGACHAT_API_KEY: {'‚úÖ' if GIGACHAT_API_KEY else '‚ùå'}")

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±-—Ö—É–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
try:
    bot.remove_webhook()
    webhook_url = f"{APP_URL}/webhook"
    bot.set_webhook(url=webhook_url)
    print(f"‚úÖ Webhook set: {webhook_url}")
except Exception as e:
    print(f"‚ùå Webhook error: {e}")

# –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è GigaChat —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
class SimpleGigaChat:
    def __init__(self):
        self.api_key = GIGACHAT_API_KEY
        self.is_configured = bool(self.api_key)
    
    def send_message(self, message_text):
        if not self.is_configured:
            return "‚ùå GigaChat –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ GIGACHAT_API_KEY –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Render."
        
        try:
            # –ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã GigaChat –¥–ª—è —Ç–µ—Å—Ç–∞
            # –ó–ê–ú–ï–ù–ò –≠–¢–£ –ß–ê–°–¢–¨ –ù–ê –†–ï–ê–õ–¨–ù–´–ô API GIGACHAT –ö–û–ì–î–ê –ü–û–õ–£–ß–ò–®–¨ –ö–õ–Æ–ß
            response = f"""ü§ñ GigaChat Response (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)

–í–∞—à –∑–∞–ø—Ä–æ—Å: "{message_text}"

üìä –°—Ç–∞—Ç—É—Å: GigaChat API –∫–ª—é—á –ø–æ–ª—É—á–µ–Ω
üîë –ö–ª—é—á: {self.api_key[:10]}...{self.api_key[-10:]}

üí° –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å GigaChat:
1. –ü–æ–ª—É—á–∏ API –∫–ª—é—á –Ω–∞ developers.sber.ru
2. –ó–∞–º–µ–Ω–∏ —ç—Ç–æ—Ç –∫–æ–¥ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API –≤—ã–∑–æ–≤
3. –ò—Å–ø–æ–ª—å–∑—É–π –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é GigaChat

–ê –ø–æ–∫–∞ —è –ø—Ä–æ—Å—Ç–æ —ç—Ö–æ-–±–æ—Ç! üéØ"""
            
            return response
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ GigaChat: {str(e)}"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è GigaChat
gigachat = SimpleGigaChat()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(commands=['start'])
def send_welcome(message):
    welcome_text = f"""
ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π GigaChat

üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:
‚Ä¢ –ë–æ—Ç: ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω
‚Ä¢ GigaChat: {'‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' if gigachat.is_configured else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}
‚Ä¢ –°–µ—Ä–≤–µ—Ä: {APP_URL}

üí° –ö–æ–º–∞–Ω–¥—ã:
/start - —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/test - —Ç–µ—Å—Ç —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
/status - —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å!
"""
    bot.reply_to(message, welcome_text)

@bot.message_handler(commands=['test'])
def test_command(message):
    test_response = gigachat.send_message("–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    bot.reply_to(message, test_response)

@bot.message_handler(commands=['status'])
def status_command(message):
    status_text = f"""
üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:

‚Ä¢ –ë–æ—Ç: ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω
‚Ä¢ GigaChat: {'‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' if gigachat.is_configured else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}
‚Ä¢ Webhook: {APP_URL}/webhook
‚Ä¢ API Key: {'‚úÖ –ï—Å—Ç—å' if GIGACHAT_API_KEY else '‚ùå –ù–µ—Ç'}

–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ GigaChat:
1. –ü–æ–ª—É—á–∏ API –∫–ª—é—á –Ω–∞ developers.sber.ru
2. –î–æ–±–∞–≤—å GIGACHAT_API_KEY –≤ Environment Variables –≤ Render
3. –û–±–Ω–æ–≤–∏ –∫–æ–¥ –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö API –≤—ã–∑–æ–≤–æ–≤
"""
    bot.reply_to(message, status_text)

@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç
    bot.send_chat_action(message.chat.id, 'typing')
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç GigaChat
    response = gigachat.send_message(message.text)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    bot.reply_to(message, response)

# –í–µ–±-—Ö—É–∫ endpoint
@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        json_data = request.get_json()
        update = telebot.types.Update.de_json(json_data)
        bot.process_new_updates([update])
        return "OK", 200
    except Exception as e:
        print(f"‚ùå Webhook error: {e}")
        return "Error", 500

# –°—Ç–∞—Ç—É—Å —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route('/')
def status():
    webhook_info = bot.get_webhook_info()
    return f"""
    <h1>ü§ñ Telegram Bot + GigaChat</h1>
    <p><strong>Status:</strong> ‚úÖ Active</p>
    <p><strong>URL:</strong> {APP_URL}</p>
    <p><strong>Webhook:</strong> {webhook_info.url}</p>
    <p><strong>GigaChat:</strong> {'‚úÖ Configured' if gigachat.is_configured else '‚ùå Not configured'}</p>
    <hr>
    <h3>üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</h3>
    <ol>
    <li>–ù–∞–ø–∏—à–∏ –±–æ—Ç—É <code>/start</code> –≤ Telegram</li>
    <li>–ü—Ä–æ–≤–µ—Ä—å —Ä–∞–±–æ—Ç—É <code>/test</code></li>
    <li>–î–ª—è GigaChat –ø–æ–ª—É—á–∏ API –∫–ª—é—á –Ω–∞ developers.sber.ru</li>
    </ol>
    """

@app.route('/debug')
def debug():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–ª–∞–¥–∫–∏"""
    return {
        "bot_token_exists": bool(BOT_TOKEN),
        "gigachat_key_exists": bool(GIGACHAT_API_KEY),
        "app_url": APP_URL,
        "webhook_url": f"{APP_URL}/webhook"
    }

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 10000))
    print(f"üöÄ Starting on port {port}")
    app.run(host='0.0.0.0', port=port)
