import os
import requests
import urllib3
from flask import Flask, request
import telebot
import json

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è SSL
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = os.environ.get('BOT_TOKEN')
GIGACHAT_API_KEY = os.environ.get('GIGACHAT_API_KEY')
APP_URL = "https://telegram-bot-x6zm.onrender.com"

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

print("üöÄ Starting Telegram Bot with GigaChat...")
print(f"üîë BOT_TOKEN: {'‚úÖ' if BOT_TOKEN else '‚ùå'}")
print(f"üß† GIGACHAT_API_KEY: {'‚úÖ' if GIGACHAT_API_KEY else '‚ùå'}")

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±-—Ö—É–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
try:
    bot.remove_webhook()
    webhook_url = f"{APP_URL}/webhook"
    bot.set_webhook(url=webhook_url)
    print(f"‚úÖ Webhook set: {webhook_url}")
except Exception as e:
    print(f"‚ùå Webhook error: {e}")

# –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è GigaChat
class SimpleGigaChat:
    def __init__(self):
        self.api_key = GIGACHAT_API_KEY
        self.is_configured = bool(self.api_key)
    
    def send_message(self, message_text):
        if not self.is_configured:
            return "‚ùå GigaChat –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ GIGACHAT_API_KEY –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Render."
        
        try:
            # –ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã GigaChat –¥–ª—è —Ç–µ—Å—Ç–∞
            response = f"""ü§ñ GigaChat Response (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)

–í–∞—à –∑–∞–ø—Ä–æ—Å: "{message_text}"

üìä –°—Ç–∞—Ç—É—Å: –í–µ–±-—Ö—É–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç! –í–∏–∂—É –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
üîë –ö–ª—é—á: {self.api_key[:10]}...{self.api_key[-10:] if self.api_key else 'N/A'}

üí° –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –≤–µ–±-—Ö—É–∫!"""
            
            return response
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ GigaChat: {str(e)}"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è GigaChat
gigachat = SimpleGigaChat()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(commands=['start'])
def send_welcome(message):
    print(f"üì® Received /start from {message.chat.id}")
    welcome_text = f"""
ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π GigaChat

üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:
‚Ä¢ –ë–æ—Ç: ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω
‚Ä¢ GigaChat: {'‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' if gigachat.is_configured else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}
‚Ä¢ –í–µ–±-—Ö—É–∫: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç

üí° –ö–æ–º–∞–Ω–¥—ã:
/start - —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/test - —Ç–µ—Å—Ç —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
/status - —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å!
"""
    bot.reply_to(message, welcome_text)

@bot.message_handler(commands=['test'])
def test_command(message):
    print(f"üß™ Received /test from {message.chat.id}")
    test_response = gigachat.send_message("–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    bot.reply_to(message, test_response)

@bot.message_handler(commands=['status'])
def status_command(message):
    print(f"üìä Received /status from {message.chat.id}")
    status_text = f"""
üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:

‚Ä¢ –ë–æ—Ç: ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω
‚Ä¢ GigaChat: {'‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' if gigachat.is_configured else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}
‚Ä¢ Webhook: {APP_URL}/webhook
‚Ä¢ API Key: {'‚úÖ –ï—Å—Ç—å' if GIGACHAT_API_KEY else '‚ùå –ù–µ—Ç'}

–õ–æ–≥–∏ –≤–µ–±-—Ö—É–∫–∞: ‚úÖ –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –æ—Ç Telegram
"""
    bot.reply_to(message, status_text)

@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    print(f"üí¨ Received message from {message.chat.id}: {message.text}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç
    bot.send_chat_action(message.chat.id, 'typing')
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç GigaChat
    response = gigachat.send_message(message.text)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    bot.reply_to(message, response)
    print(f"‚úÖ Sent response to {message.chat.id}")

# –í–µ–±-—Ö—É–∫ endpoint - –£–ü–†–û–©–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
        raw_data = request.get_data(as_text=True)
        print(f"üì• Raw webhook data: {raw_data}")
        
        # –ü–∞—Ä—Å–∏–º JSON
        json_data = request.get_json()
        print(f"üì¶ Parsed JSON: {json.dumps(json_data, indent=2)}")
        
        if 'message' in json_data:
            chat_id = json_data['message']['chat']['id']
            text = json_data['message'].get('text', '')
            print(f"üë§ Chat ID: {chat_id}, Text: {text}")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        update = telebot.types.Update.de_json(json_data)
        bot.process_new_updates([update])
        
        print("‚úÖ Webhook processed successfully")
        return "OK", 200
        
    except Exception as e:
        print(f"‚ùå Webhook error: {e}")
        import traceback
        traceback.print_exc()
        return "Error", 500

# –°—Ç–∞—Ç—É—Å —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route('/')
def status():
    return """
    <h1>ü§ñ Telegram Bot + GigaChat</h1>
    <p><strong>Status:</strong> ‚úÖ Active</p>
    <p><strong>Webhook:</strong> ‚úÖ Receiving requests</p>
    <p><strong>URL:</strong> https://telegram-bot-x6zm.onrender.com</p>
    <hr>
    <p>–ü—Ä–æ–≤–µ—Ä—å –ª–æ–≥–∏ –≤ Render - —Ç–∞–º –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö</p>
    """

@app.route('/debug')
def debug():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–ª–∞–¥–∫–∏"""
    return {
        "status": "active",
        "webhook_working": True,
        "bot_token_exists": bool(BOT_TOKEN),
        "gigachat_key_exists": bool(GIGACHAT_API_KEY)
    }

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 10000))
    print(f"üöÄ Starting on port {port}")
    app.run(host='0.0.0.0', port=port)
