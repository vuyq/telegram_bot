import os
import requests
import urllib3
from flask import Flask, request
import telebot

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è SSL (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = os.environ.get('BOT_TOKEN')
GIGACHAT_API_KEY = os.environ.get('GIGACHAT_API_KEY')

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ URL –¥–ª—è Render
RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:
    APP_URL = f"https://{RENDER_EXTERNAL_HOSTNAME}"
else:
    # –í—Ä–µ–º–µ–Ω–Ω—ã–π URL - –∑–∞–º–µ–Ω–∏ –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π
    APP_URL = "https://your-app-name.onrender.com"

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

print(f"üöÄ Bot started!")
print(f"üì± APP_URL: {APP_URL}")
print(f"üîë BOT_TOKEN exists: {bool(BOT_TOKEN)}")
print(f"üß† GIGACHAT_API_KEY exists: {bool(GIGACHAT_API_KEY)}")

# –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è GigaChat –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
class SimpleGigaChat:
    def send_message(self, message_text):
        if not GIGACHAT_API_KEY:
            return "‚ùå GigaChat API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ GIGACHAT_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Render."
        
        try:
            # –ü—Ä–æ—Å—Ç–∞—è –∑–∞–≥–ª—É—à–∫–∞ - –∑–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API –≤—ã–∑–æ–≤
            return f"ü§ñ GigaChat –æ—Ç–≤–µ—Ç–∏–ª –±—ã –Ω–∞: '{message_text}'\n\n(–†–µ–∞–ª—å–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ OAuth2 —Å GigaChat API)"
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ GigaChat: {str(e)}"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è GigaChat
gigachat = SimpleGigaChat()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ Telegram –±–æ—Ç–∞
@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    welcome_text = f"""
ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç —Å GigaChat.

üìä –°—Ç–∞—Ç—É—Å:
‚Ä¢ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: ‚úÖ
‚Ä¢ GigaChat: {'‚úÖ' if GIGACHAT_API_KEY else '‚ùå'}
‚Ä¢ URL: {APP_URL}

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!
    """
    bot.reply_to(message, welcome_text)

@bot.message_handler(commands=['test'])
def test_command(message):
    """–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã"""
    bot.reply_to(message, "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! GigaChat –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")

@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    if message.text.startswith('/'):
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º "–ø–µ—á–∞—Ç–∞–µ—Ç..." —Å—Ç–∞—Ç—É—Å
    bot.send_chat_action(message.chat.id, 'typing')
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç GigaChat
    response = gigachat.send_message(message.text)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    bot.reply_to(message, response)

# –í–µ–±-—Ö—É–∫ –¥–ª—è Render
@app.route('/' + BOT_TOKEN, methods=['POST'])
def get_message():
    try:
        json_string = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return "OK", 200
    except Exception as e:
        print(f"Error processing update: {e}")
        return "Error", 500

@app.route("/")
def webhook():
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±-—Ö—É–∫
        bot.remove_webhook()
        webhook_url = f"{APP_URL}/{BOT_TOKEN}"
        success = bot.set_webhook(url=webhook_url)
        
        status_text = f"""
‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω!
‚Ä¢ Webhook: {webhook_url}
‚Ä¢ GigaChat: {'‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' if GIGACHAT_API_KEY else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}
‚Ä¢ SetWebhook: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}

–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ GigaChat:
1. –ü–æ–ª—É—á–∏ API –∫–ª—é—á –Ω–∞ developers.sber.ru
2. –î–æ–±–∞–≤—å GIGACHAT_API_KEY –≤ Environment Variables –≤ Render
        """
        return status_text
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

@app.route("/test")
def test_page():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    return f"""
<h1>ü§ñ Telegram Bot Status</h1>
<p><strong>Status:</strong> ‚úÖ Active</p>
<p><strong>URL:</strong> {APP_URL}</p>
<p><strong>Bot Token:</strong> {'‚úÖ Set' if BOT_TOKEN else '‚ùå Missing'}</p>
<p><strong>GigaChat API:</strong> {'‚úÖ Set' if GIGACHAT_API_KEY else '‚ùå Missing'}</p>
<hr>
<p>–¢–µ–ø–µ—Ä—å —É—Å—Ç–∞–Ω–æ–≤–∏ –≤–µ–±-—Ö—É–∫ –≤ BotFather:</p>
<code>/setwebhook {APP_URL}/{BOT_TOKEN}</code>
"""

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get('PORT', 10000)))
