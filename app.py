import os
import telebot
from flask import Flask, request, jsonify
import json
import requests
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = os.environ.get('BOT_TOKEN')
GIGACHAT_API_KEY = os.environ.get('GIGACHAT_API_KEY')
APP_URL = "https://telegram-bot-x6zm.onrender.com"

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
print(f"üîë –¢–æ–∫–µ–Ω: {'‚úÖ' if BOT_TOKEN else '‚ùå'}")
print(f"üß† GigaChat: {'‚úÖ' if GIGACHAT_API_KEY else '‚ùå'}")

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±-—Ö—É–∫
try:
    bot.remove_webhook()
    time.sleep(1)
    bot.set_webhook(url=f"{APP_URL}/webhook")
    print(f"‚úÖ –í–µ–±-—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {APP_URL}/webhook")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –≤–µ–±-—Ö—É–∫–∞: {e}")

# –ö–õ–ê–°–° GIGACHAT –° –†–ï–ê–õ–¨–ù–û–ô –ò–ù–¢–ï–ì–†–ê–¶–ò–ï–ô
class GigaChatBot:
    def __init__(self):
        self.api_key = GIGACHAT_API_KEY
        self.is_configured = bool(self.api_key)
        self.access_token = None
        self.token_expires = 0
        self.base_url = "https://gigachat.devices.sberbank.ru/api/v1"
        
    def get_auth_token(self):
        """–ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è GigaChat API"""
        try:
            if not self.api_key:
                return None
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—Ç–µ–∫ –ª–∏ —Ç–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω
            if self.access_token and time.time() < self.token_expires:
                return self.access_token
                
            url = "https://ngw.devices.sberbank.ru:9443/api/v2/oauth"
            headers = {
                'Authorization': f'Bearer {self.api_key}',
                'Content-Type': 'application/x-www-form-urlencoded',
                'Accept': 'application/json'
            }
            data = {
                'scope': 'GIGACHAT_API_PERS'
            }
            
            response = requests.post(url, headers=headers, data=data, verify=False, timeout=30)
            response.raise_for_status()
            
            token_data = response.json()
            self.access_token = token_data.get('access_token')
            # –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤—É–µ—Ç 30 –º–∏–Ω—É—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è –Ω–∞ 25 –º–∏–Ω—É—Ç
            self.token_expires = time.time() + 1500
            
            print("‚úÖ –¢–æ–∫–µ–Ω GigaChat –ø–æ–ª—É—á–µ–Ω")
            return self.access_token
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ GigaChat: {e}")
            return None
    
    def get_response(self, user_message):
        """–ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç GigaChat API"""
        if not self.is_configured:
            return "‚ùå GigaChat –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ GIGACHAT_API_KEY –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Render."
        
        try:
            auth_token = self.get_auth_token()
            if not auth_token:
                return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤ GigaChat. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á."
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö
            system_prompt = """–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –≤ –æ–±–ª–∞—Å—Ç–∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π. –¢–≤–æ—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:
1. –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∏ –¥–∏–ø–ª–æ–º–∞—Ç–∏—è
2. –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≤—É–∑—ã –Ω–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è (–ú–ì–ò–ú–û, –ú–ì–£, –°–ü–±–ì–£ –∏ –¥—Ä.)
3. –ö–∞—Ä—å–µ—Ä–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤ —Å—Ñ–µ—Ä–µ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π
4. –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è –∏ —Ç–µ–æ—Ä–∏–∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π
5. –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ (–û–û–ù, –ù–ê–¢–û, –ï–°, –í–¢–û –∏ –¥—Ä.)
6. –í–Ω–µ—à–Ω—è—è –ø–æ–ª–∏—Ç–∏–∫–∞ –∏ –≥–µ–æ–ø–æ–ª–∏—Ç–∏–∫–∞

–û—Ç–≤–µ—á–∞–π –ø–æ–¥—Ä–æ–±–Ω–æ, –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ. –î–∞–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã.
–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –ø–æ —Ç–µ–º–µ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π, –≤–µ–∂–ª–∏–≤–æ –Ω–∞–ø—Ä–∞–≤–ª—è–π —Ä–∞–∑–≥–æ–≤–æ—Ä –≤ –Ω—É–∂–Ω–æ–µ —Ä—É—Å–ª–æ."""

            url = f"{self.base_url}/chat/completions"
            headers = {
                'Authorization': f'Bearer {auth_token}',
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            }
            
            data = {
                "model": "GigaChat",
                "messages": [
                    {
                        "role": "system",
                        "content": system_prompt
                    },
                    {
                        "role": "user", 
                        "content": user_message
                    }
                ],
                "temperature": 0.7,
                "max_tokens": 2000
            }
            
            print(f"üß† –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ GigaChat: {user_message[:100]}...")
            response = requests.post(url, headers=headers, json=data, verify=False, timeout=30)
            response.raise_for_status()
            
            result = response.json()
            chat_response = result['choices'][0]['message']['content']
            
            print(f"‚úÖ –û—Ç–≤–µ—Ç GigaChat –ø–æ–ª—É—á–µ–Ω: {len(chat_response)} —Å–∏–º–≤–æ–ª–æ–≤")
            return chat_response
            
        except requests.exceptions.RequestException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ GigaChat: {e}")
            return "‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å GigaChat. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ GigaChat API: {e}")
            return f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º GigaChat
gigachat = GigaChatBot()

# –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –û–¢–ü–†–ê–í–ö–ò –°–û–û–ë–©–ï–ù–ò–ô –ß–ï–†–ï–ó API TELEGRAM
def send_telegram_message(chat_id, text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram Bot API"""
    try:
        # –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —á–∞—Å—Ç–∏ (Telegram –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ 4096 —Å–∏–º–≤–æ–ª–æ–≤)
        max_length = 4000
        if len(text) > max_length:
            parts = []
            while text:
                if len(text) <= max_length:
                    parts.append(text)
                    break
                else:
                    # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ª–∏–º–∏—Ç–∞
                    split_pos = text.rfind('\n', 0, max_length)
                    if split_pos == -1:
                        split_pos = text.rfind('. ', 0, max_length)
                    if split_pos == -1:
                        split_pos = text.rfind(' ', 0, max_length)
                    if split_pos == -1:
                        split_pos = max_length
                    
                    parts.append(text[:split_pos])
                    text = text[split_pos:].lstrip()
            
            for i, part in enumerate(parts):
                part_text = f"{part}\n\n({i+1}/{len(parts)})"
                url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
                data = {
                    "chat_id": chat_id,
                    "text": part_text,
                    "parse_mode": "HTML"
                }
                requests.post(url, json=data, timeout=10)
                time.sleep(0.5)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
            return True
        else:
            url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
            data = {
                "chat_id": chat_id,
                "text": text,
                "parse_mode": "HTML"
            }
            response = requests.post(url, json=data, timeout=10)
            print(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ {chat_id}: {response.status_code}")
            if response.status_code != 200:
                print(f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {response.text}")
            return response.status_code == 200
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        return False

# –í–ï–ë-–•–£–ö –° –†–£–ß–ù–û–ô –û–ë–†–ê–ë–û–¢–ö–û–ô
@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        if request.content_type != 'application/json':
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π content-type")
            return "Invalid content-type", 400
            
        json_data = request.get_json()
        if not json_data:
            print("‚ùå –ü—É—Å—Ç–æ–π JSON")
            return "Empty JSON", 400
        
        print(f"üì• –ü–æ–ª—É—á–µ–Ω webhook: {json.dumps(json_data, indent=2)}")
        
        # –†–£–ß–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –°–û–û–ë–©–ï–ù–ò–ô
        if 'message' in json_data:
            message = json_data['message']
            chat_id = message['chat']['id']
            text = message.get('text', '')
            
            print(f"üí¨ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {chat_id} -> {text}")
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
            if text == '/start':
                welcome_text = """
üåç –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ë–û–¢ –ü–û –ú–ï–ñ–î–£–ù–ê–†–û–î–ù–´–ú –û–¢–ù–û–®–ï–ù–ò–Ø–ú!

üéØ –Ø —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –∏ –∏—Å–ø–æ–ª—å–∑—É—é –Ω–µ–π—Ä–æ—Å–µ—Ç—å GigaChat –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã.

üìö –Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Å:
‚Ä¢ –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ–º –≤ –≤—É–∑—ã (–ú–ì–ò–ú–û, –ú–ì–£, –°–ü–±–ì–£ –∏ –¥—Ä.)
‚Ä¢ –û—Å–Ω–æ–≤–Ω—ã–º–∏ –ø–æ–Ω—è—Ç–∏—è–º–∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π
‚Ä¢ –ö–∞—Ä—å–µ—Ä–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –≤ —ç—Ç–æ–π —Å—Ñ–µ—Ä–µ
‚Ä¢ –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏ (–û–û–ù, –ù–ê–¢–û, –ï–° –∏ –¥—Ä.)
‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –≥–µ–æ–ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏

üí° –ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö, –∏ GigaChat –¥–∞—Å—Ç —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!

–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:
"–ö–∞–∫–∏–µ —ç–∫–∑–∞–º–µ–Ω—ã –Ω—É–∂–Ω—ã –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –Ω–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –≤ –ú–ì–ò–ú–û?"
"–û–±—ä—è—Å–Ω–∏ –ø–æ–Ω—è—Ç–∏–µ '–¥–∏–ø–ª–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–º–º—É–Ω–∏—Ç–µ—Ç'"
"–ì–¥–µ –º–æ–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π?"
"–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –û–û–ù"

üöÄ –ù–∞—á–Ω–∏—Ç–µ —Å –ª—é–±–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞!
"""
                send_telegram_message(chat_id, welcome_text)
                print(f"‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {chat_id}")
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
            elif text == '/help':
                help_text = """
‚ùì **–ü–û–ú–û–©–¨ –ü–û –ë–û–¢–£ –ú–ï–ñ–î–£–ù–ê–†–û–î–ù–´–• –û–¢–ù–û–®–ï–ù–ò–ô**

üéØ **–Ø –∏—Å–ø–æ–ª—å–∑—É—é –Ω–µ–π—Ä–æ—Å–µ—Ç—å GigaChat –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ:**
‚Ä¢ –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º –∏ –¥–∏–ø–ª–æ–º–∞—Ç–∏–∏
‚Ä¢ –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏—é –≤ –ø—Ä–æ—Ñ–∏–ª—å–Ω—ã–µ –≤—É–∑—ã
‚Ä¢ –ö–∞—Ä—å–µ—Ä–Ω—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º
‚Ä¢ –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º
‚Ä¢ –ì–µ–æ–ø–æ–ª–∏—Ç–∏–∫–µ –∏ –≤–Ω–µ—à–Ω–µ–π –ø–æ–ª–∏—Ç–∏–∫–µ

üí° **–ö–∞–∫ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã:**
–ë—É–¥—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã - —Ç–∞–∫ GigaChat –¥–∞—Å—Ç –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç.

üìã **–ü—Ä–∏–º–µ—Ä—ã —Ö–æ—Ä–æ—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:**
"–ö–∞–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã –ï–ì–≠ –Ω—É–∂–Ω—ã –¥–ª—è –ú–ì–ò–ú–û –Ω–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π?"
"–í —á–µ–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –¥–∏–ø–ª–æ–º–∞—Ç–∏–µ–π –∏ –≤–Ω–µ—à–Ω–µ–π –ø–æ–ª–∏—Ç–∏–∫–æ–π?"
"–ö–∞–∫–∏–µ –∫–∞—Ä—å–µ—Ä–Ω—ã–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã —É –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π?"
"–†–∞—Å—Å–∫–∞–∂–∏ –æ —Ä–æ–ª–∏ –û–û–ù –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –º–∏—Ä–µ"

‚ö° **–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å - –∏ –ø–æ–ª—É—á–∏—Ç–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç –æ—Ç GigaChat!**
"""
                send_telegram_message(chat_id, help_text)
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /status
            elif text == '/status':
                status_text = f"""
üìä **–°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´:**

ü§ñ –ë–æ—Ç: ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω
üß† GigaChat: {'‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' if gigachat.is_configured else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}
üåê –í–µ–±-—Ö—É–∫: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç
üí¨ –ß–∞—Ç ID: {chat_id}

üí° **GigaChat API:** {'‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' if gigachat.is_configured else '‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞'}

–í—Å—ë –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ! –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º! üéìüåç
"""
                send_telegram_message(chat_id, status_text)
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å /)
            elif text and not text.startswith('/'):
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç
                url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendChatAction"
                data = {"chat_id": chat_id, "action": "typing"}
                requests.post(url, json=data, timeout=5)
                
                print(f"üß† –ó–∞–ø—Ä–æ—Å –∫ GigaChat: {text}")
                giga_response = gigachat.get_response(text)
                send_telegram_message(chat_id, giga_response)
                print(f"‚úÖ –û—Ç–≤–µ—Ç GigaChat –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ {chat_id}")
            
            else:
                print(f"‚ö†Ô∏è  –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ: {text}")
        
        print("‚úÖ Webhook –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return "OK", 200
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ webhook: {e}")
        import traceback
        traceback.print_exc()
        return "Error", 500

# –¢–µ—Å—Ç GigaChat
@app.route('/test_gigachat')
def test_gigachat():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ GigaChat"""
    test_message = "–ü—Ä–∏–≤–µ—Ç! –û—Ç–≤–µ—Ç—å –∫—Ä–∞—Ç–∫–æ: —á—Ç–æ —Ç–∞–∫–æ–µ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è?"
    try:
        response = gigachat.get_response(test_message)
        return jsonify({
            "status": "success",
            "gigachat_configured": gigachat.is_configured,
            "test_message": test_message,
            "response": response
        })
    except Exception as e:
        return jsonify({
            "status": "error",
            "error": str(e)
        })

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route('/')
def home():
    return """
    <h1>üåç –ë–æ—Ç –ø–æ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º —Å GigaChat</h1>
    <p><strong>Status:</strong> ‚úÖ Active</p>
    <p><strong>AI:</strong> GigaChat Integration</p>
    <p><strong>Specialization:</strong> –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è</p>
    
    <h3>–¢–µ—Å—Ç—ã:</h3>
    <ul>
        <li><a href="/test_gigachat">–¢–µ—Å—Ç GigaChat</a></li>
        <li><a href="/status">–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</a></li>
    </ul>
    
    <h3>–§—É–Ω–∫—Ü–∏–∏:</h3>
    <ul>
        <li>üéì –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—é –≤ –≤—É–∑—ã</li>
        <li>üìö –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø–æ–Ω—è—Ç–∏–π –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π</li>
        <li>üíº –ö–∞—Ä—å–µ—Ä–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</li>
        <li>üèõÔ∏è –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</li>
        <li>üß† –û—Ç–≤–µ—Ç—ã –æ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ GigaChat</li>
    </ul>
    
    <p>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É /start –≤ Telegram!</p>
    """

@app.route('/status')
def status():
    return jsonify({
        "bot_status": "active",
        "gigachat_configured": gigachat.is_configured,
        "webhook_set": True
    })

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 10000))
    print(f"üåê –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    print(f"üß† GigaChat: {'‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' if gigachat.is_configured else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
    print(f"üéØ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è")
    print("üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –±–æ—Ç—É –≤ Telegram!")
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ GigaChat –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    if gigachat.is_configured:
        print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ GigaChat...")
        try:
            test_response = gigachat.get_response("–ü—Ä–∏–≤–µ—Ç! –û—Ç–≤–µ—Ç—å –∫—Ä–∞—Ç–∫–æ –æ–¥–Ω–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º.")
            print(f"‚úÖ GigaChat —Ç–µ—Å—Ç: –£—Å–ø–µ—à–Ω–æ ({len(test_response)} —Å–∏–º–≤–æ–ª–æ–≤)")
        except Exception as e:
            print(f"‚ùå GigaChat —Ç–µ—Å—Ç: –û—à–∏–±–∫–∞ - {e}")
    
    app.run(host='0.0.0.0', port=port, debug=False)
