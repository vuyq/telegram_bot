import os
import telebot
from flask import Flask, request
import json
import requests

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = os.environ.get('BOT_TOKEN')
GIGACHAT_API_KEY = os.environ.get('GIGACHAT_API_KEY')
APP_URL = "https://telegram-bot-x6zm.onrender.com"

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
print(f"üîë –¢–æ–∫–µ–Ω: {'‚úÖ' if BOT_TOKEN else '‚ùå'}")
print(f"üß† GigaChat: {'‚úÖ' if GIGACHAT_API_KEY else '‚ùå'}")

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±-—Ö—É–∫
try:
    bot.remove_webhook()
    bot.set_webhook(url=f"{APP_URL}/webhook")
    print("‚úÖ –í–µ–±-—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –≤–µ–±-—Ö—É–∫–∞: {e}")

# –ö–õ–ê–°–° GIGACHAT
class GigaChatBot:
    def __init__(self):
        self.api_key = GIGACHAT_API_KEY
        self.is_configured = bool(self.api_key)
    
    def get_response(self, user_message):
        if not self.is_configured:
            return "‚ùå GigaChat –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ GIGACHAT_API_KEY –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Render."
        
        try:
            # –ü–†–û–°–¢–ê–Ø –ò–ú–ò–¢–ê–¶–ò–Ø GIGACHAT –î–õ–Ø –¢–ï–°–¢–ê
            responses = [
                f"ü§ñ GigaChat: –ü—Ä–∏–≤–µ—Ç! –¢—ã —Å–ø—Ä–æ—Å–∏–ª: '{user_message}'",
                f"üß† –ù–µ–π—Ä–æ—Å–µ—Ç—å: –Ø –æ–±—Ä–∞–±–æ—Ç–∞–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å: '{user_message}'", 
                f"üéØ GigaChat –æ—Ç–≤–µ—Ç: –≠—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å: '{user_message}'",
            ]
            
            import random
            return random.choice(responses)
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ GigaChat: {str(e)}"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º GigaChat
gigachat = GigaChatBot()

# –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –û–¢–ü–†–ê–í–ö–ò –°–û–û–ë–©–ï–ù–ò–ô –ß–ï–†–ï–ó API TELEGRAM
def send_telegram_message(chat_id, text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram Bot API"""
    try:
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
        data = {
            "chat_id": chat_id,
            "text": text
        }
        response = requests.post(url, json=data)
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ {chat_id}: {response.status_code}")
        return response.status_code == 200
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        return False

# –û–ë–†–ê–ë–û–¢–ß–ò–ö START
@bot.message_handler(commands=['start'])
def send_welcome(message):
    chat_id = message.chat.id
    print(f"üéØ –ü–æ–ª—É—á–µ–Ω /start –æ—Ç {chat_id}")
    
    welcome_text = f"""
üéâ –ü–†–ò–í–ï–¢! –Ø –¢–ï–õ–ï–ì–†–ê–ú –ë–û–¢ –° GIGACHAT!

ü§ñ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å GigaChat: {'‚úÖ –ê–∫—Ç–∏–≤–Ω–∞' if gigachat.is_configured else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞'}

üí° –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –æ–±—Ä–∞–±–æ—Ç–∞—é –µ–≥–æ —á–µ—Ä–µ–∑ –Ω–µ–π—Ä–æ—Å–µ—Ç—å GigaChat!

üöÄ –ö–æ–º–∞–Ω–¥—ã:
/start - —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/test - —Ç–µ—Å—Ç GigaChat
/status - —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã

–ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏ —É–≤–∏–¥–∏—à—å –æ—Ç–≤–µ—Ç –æ—Ç GigaChat!
"""
    
    # –û–¢–ü–†–ê–í–õ–Ø–ï–ú –°–û–û–ë–©–ï–ù–ò–ï –ù–ê–ü–†–Ø–ú–£–Æ –ß–ï–†–ï–ó API
    success = send_telegram_message(chat_id, welcome_text)
    if success:
        print(f"‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {chat_id}")
    else:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ {chat_id}")

# –û–ë–†–ê–ë–û–¢–ß–ò–ö TEST
@bot.message_handler(commands=['test'])
def test_gigachat(message):
    chat_id = message.chat.id
    print(f"üß™ –¢–µ—Å—Ç GigaChat –æ—Ç {chat_id}")
    
    test_response = gigachat.get_response("–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    send_telegram_message(chat_id, test_response)

# –û–ë–†–ê–ë–û–¢–ß–ò–ö –í–°–ï–• –°–û–û–ë–©–ï–ù–ò–ô
@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    chat_id = message.chat.id
    text = message.text
    
    print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {chat_id}: {text}")
    
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    if text.startswith('/'):
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç GigaChat
    giga_response = gigachat.get_response(text)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    send_telegram_message(chat_id, giga_response)
    print(f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ {chat_id}")

# –í–µ–±-—Ö—É–∫ endpoint - –£–ü–†–û–©–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        json_data = request.get_json()
        print(f"üì• –ü–æ–ª—É—á–µ–Ω webhook: {json.dumps(json_data, indent=2)}")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞
        update = telebot.types.Update.de_json(json_data)
        bot.process_new_updates([update])
        
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
        return "OK", 200
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ webhook: {e}")
        import traceback
        traceback.print_exc()
        return "Error", 500

# –°—Ç–∞—Ç—É—Å —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route('/')
def home():
    return """
    <h1>ü§ñ Telegram Bot + GigaChat</h1>
    <p><strong>Status:</strong> ‚úÖ Active</p>
    <p>–û—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É <code>/start</code> –≤ Telegram!</p>
    """

# –†—É—á–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∞
@app.route('/send_test/<chat_id>')
def send_test_message(chat_id):
    """–†—É—á–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    test_text = "üîß –¢–µ—Å—Ç –∏–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    success = send_telegram_message(chat_id, test_text)
    return f"Sent: {success}"

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 10000))
    print(f"üåê –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    app.run(host='0.0.0.0', port=port)
