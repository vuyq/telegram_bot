iimport os
import telebot
from flask import Flask, request
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = os.environ.get('BOT_TOKEN')
GIGACHAT_API_KEY = os.environ.get('GIGACHAT_API_KEY')
APP_URL = "https://telegram-bot-x6zm.onrender.com"

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
print(f"üîë –¢–æ–∫–µ–Ω: {'‚úÖ' if BOT_TOKEN else '‚ùå'}")
print(f"üß† GigaChat: {'‚úÖ' if GIGACHAT_API_KEY else '‚ùå'}")

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±-—Ö—É–∫
try:
    bot.remove_webhook()
    bot.set_webhook(url=f"{APP_URL}/webhook")
    print("‚úÖ –í–µ–±-—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –≤–µ–±-—Ö—É–∫–∞: {e}")

# –ö–õ–ê–°–° GIGACHAT
class GigaChatBot:
    def __init__(self):
        self.api_key = GIGACHAT_API_KEY
        self.is_configured = bool(self.api_key)
    
    def get_response(self, user_message):
        if not self.is_configured:
            return "‚ùå GigaChat –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ GIGACHAT_API_KEY –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Render."
        
        try:
            # –ü–†–û–°–¢–ê–Ø –ò–ú–ò–¢–ê–¶–ò–Ø GIGACHAT –î–õ–Ø –¢–ï–°–¢–ê
            # –ó–ê–ú–ï–ù–ò –≠–¢–£ –ß–ê–°–¢–¨ –ù–ê –†–ï–ê–õ–¨–ù–´–ô API GIGACHAT
            
            responses = [
                f"ü§ñ GigaChat: –ü—Ä–∏–≤–µ—Ç! –¢—ã —Å–ø—Ä–æ—Å–∏–ª: '{user_message}'",
                f"üß† –ù–µ–π—Ä–æ—Å–µ—Ç—å: –Ø –æ–±—Ä–∞–±–æ—Ç–∞–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å: '{user_message}'", 
                f"üéØ GigaChat –æ—Ç–≤–µ—Ç: –≠—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å: '{user_message}'",
                f"üí° –ò–ò: –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É '{user_message}' —è –º–æ–≥—É –ø–æ–º–æ—á—å!",
                f"üöÄ GigaChat: –û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! '{user_message}'"
            ]
            
            import random
            return random.choice(responses)
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ GigaChat: {str(e)}"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º GigaChat
gigachat = GigaChatBot()

# –û–ë–†–ê–ë–û–¢–ß–ò–ö START –° GIGACHAT
@bot.message_handler(commands=['start'])
def send_welcome(message):
    print(f"üéØ –ü–æ–ª—É—á–µ–Ω /start –æ—Ç {message.chat.id}")
    
    welcome_text = f"""
üéâ –ü–†–ò–í–ï–¢! –Ø –¢–ï–õ–ï–ì–†–ê–ú –ë–û–¢ –° GIGACHAT!

ü§ñ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å GigaChat: {'‚úÖ –ê–∫—Ç–∏–≤–Ω–∞' if gigachat.is_configured else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞'}

üí° –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –æ–±—Ä–∞–±–æ—Ç–∞—é –µ–≥–æ —á–µ—Ä–µ–∑ –Ω–µ–π—Ä–æ—Å–µ—Ç—å GigaChat!

üöÄ –ö–æ–º–∞–Ω–¥—ã:
/start - —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/test - —Ç–µ—Å—Ç GigaChat
/status - —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã

–ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏ —É–≤–∏–¥–∏—à—å –æ—Ç–≤–µ—Ç –æ—Ç GigaChat!
"""
    
    bot.send_message(message.chat.id, welcome_text)
    print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ —á–∞—Ç {message.chat.id}")

# –û–ë–†–ê–ë–û–¢–ß–ò–ö TEST –° GIGACHAT
@bot.message_handler(commands=['test'])
def test_gigachat(message):
    print(f"üß™ –¢–µ—Å—Ç GigaChat –æ—Ç {message.chat.id}")
    
    test_response = gigachat.get_response("–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ GigaChat")
    bot.send_message(message.chat.id, test_response)

# –û–ë–†–ê–ë–û–¢–ß–ò–ö STATUS
@bot.message_handler(commands=['status'])
def show_status(message):
    status_text = f"""
üìä –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´:

‚Ä¢ ü§ñ –ë–æ—Ç: ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω
‚Ä¢ üß† GigaChat: {'‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' if gigachat.is_configured else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}
‚Ä¢ üåê –°–µ—Ä–≤–µ—Ä: {APP_URL}
‚Ä¢ üîë API –∫–ª—é—á: {'‚úÖ –ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' if GIGACHAT_API_KEY else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}

üí° –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ GigaChat:
1. –ü–æ–ª—É—á–∏ API –∫–ª—é—á –Ω–∞ developers.sber.ru
2. –î–æ–±–∞–≤—å GIGACHAT_API_KEY –≤ Render
3. –û–±–Ω–æ–≤–∏ –∫–æ–¥ –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö API –∑–∞–ø—Ä–æ—Å–æ–≤
"""
    bot.send_message(message.chat.id, status_text)

# –û–ë–†–ê–ë–û–¢–ß–ò–ö –í–°–ï–• –°–û–û–ë–©–ï–ù–ò–ô –° GIGACHAT
@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.chat.id}: {message.text}")
    
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    if message.text.startswith('/'):
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º "–ø–µ—á–∞—Ç–∞–µ—Ç..."
    bot.send_chat_action(message.chat.id, 'typing')
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç GigaChat
    giga_response = gigachat.get_response(message.text)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    bot.send_message(message.chat.id, giga_response)
    print(f"‚úÖ –û—Ç–≤–µ—Ç GigaChat –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç {message.chat.id}")

# –í–µ–±-—Ö—É–∫ endpoint
@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        json_data = request.get_json()
        
        # –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if 'message' in json_data:
            chat_id = json_data['message']['chat']['id']
            text = json_data['message'].get('text', '')
            print(f"üì• –ß–∞—Ç: {chat_id}, –¢–µ–∫—Å—Ç: '{text}'")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        update = telebot.types.Update.de_json(json_data)
        bot.process_new_updates([update])
        
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
        return "OK", 200
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return "Error", 500

# –°—Ç–∞—Ç—É—Å —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route('/')
def home():
    return f"""
    <h1>ü§ñ Telegram Bot + GigaChat</h1>
    <p><strong>Status:</strong> ‚úÖ Active</p>
    <p><strong>GigaChat:</strong> {'‚úÖ Configured' if gigachat.is_configured else '‚ùå Not configured'}</p>
    <p><strong>URL:</strong> {APP_URL}</p>
    <hr>
    <p>–û—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É <code>/start</code> –≤ Telegram!</p>
    <p>–ò–ª–∏ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∞ GigaChat</p>
    """

@app.route('/gigachat_test')
def gigachat_test():
    """–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è GigaChat"""
    test_response = gigachat.get_response("–¢–µ—Å—Ç –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞")
    return f"""
    <h1>üß† GigaChat Test</h1>
    <p><strong>Response:</strong> {test_response}</p>
    <p><strong>API Key:</strong> {'‚úÖ Present' if GIGACHAT_API_KEY else '‚ùå Missing'}</p>
    """

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 10000))
    print(f"üåê –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    app.run(host='0.0.0.0', port=port)
